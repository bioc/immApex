% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/propertyEncoder.R
\name{propertyEncoder}
\alias{propertyEncoder}
\title{Encoder from Amino Acid String by Properties}
\usage{
propertyEncoder(
  input.sequences,
  max.length = NULL,
  method.to.use = NULL,
  convert.to.matrix = TRUE,
  summary.function = NULL,
  padding.symbol = ".",
  verbose = TRUE
)
}
\arguments{
\item{input.sequences}{The amino acid sequences to use}

\item{max.length}{Additional length to pad, NULL will pad sequences 
to the max length of input.sequences}

\item{method.to.use}{The method or approach to use for the conversion: 
\itemize{
  \item{Individual sets: atchleyFactors, crucianiProperties, FASGAI, kideraFactors, MSWHIM,
  ProtFP, stScales, tScales, VHSE, zScales"}
  \item{Multiple Sets: c("atchleyFactors", "VHSE") }
}}

\item{convert.to.matrix}{Return a matrix (TRUE) or a 3D array (FALSE)}

\item{summary.function}{Return a matrix that summarize the amino acid method/property
Available summaries include: "median", "mean", "sum", variance ("vars"), or 
Median Absolute Deviation ("mads")}

\item{padding.symbol}{Symbol to use for padding at the end of sequences}

\item{verbose}{Print messages corresponding to the processing step}
}
\value{
Converted amino acid sequences by property in a matrix or 3D array
}
\description{
Use this to transform amino acid sequences a
a matrix by amino acid properties derived from 
dimensional reduction strategies
}
\examples{
new.sequences <- generateSequences(prefix.motif = "CAS",
                                   suffix.motif = "YF",
                                   number.of.sequences = 100,
                                   min.length = 8,
                                   max.length = 16)
                                   
if(reticulate::py_module_available("numpy")) {                            
sequence.matrix <- propertyEncoder(new.sequences, 
                                   method.to.use = "VHSE",
                                   convert.to.matrix = TRUE)
}
                        
}
